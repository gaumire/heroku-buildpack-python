# Install dependencies with Pip.
puts-step "Installing dependencies with pip"

[ ! "$FRESH_PYTHON" ] && bpwatch start pip_install
[ "$FRESH_PYTHON" ] && bpwatch start pip_install_first

# if user wants to uninstall some packages first do so
if [[ -f requirements-uninstall.txt ]]; then
  pip uninstall -y -r requirements-uninstall.txt
fi

# change variables in all requirements files
sed -i "s/\$APP/$APP/" requirements*
 
/app/.heroku/python/bin/pip install -r requirements.txt --exists-action=w --src=./.heroku/src --allow-all-external  | cleanup | indent

if [ -f requirements.$APP ]; then
  echo "installing requirements for $APP"
  /app/.heroku/python/bin/pip install -r requirements.$APP --exists-action=w --src=./.heroku/src --allow-all-external  | cleanup | indent
fi


# Smart Requirements handling
cp requirements.txt .heroku/python/requirements-declared.txt
/app/.heroku/python/bin/pip freeze > .heroku/python/requirements-installed.txt

[ ! "$FRESH_PYTHON" ] && bpwatch stop pip_install
[ "$FRESH_PYTHON" ] && bpwatch stop pip_install_first

echo
